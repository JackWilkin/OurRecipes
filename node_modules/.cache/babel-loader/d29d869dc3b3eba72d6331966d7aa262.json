{"ast":null,"code":"import _regeneratorRuntime from \"/Users/wilkin/Projects/Coding_Projects/OurRecipes/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/wilkin/Projects/Coding_Projects/OurRecipes/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/wilkin/Projects/Coding_Projects/OurRecipes/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport React from 'react';\nimport MockData from '../tests/MockData';\nimport RecipeClient from '../RecipeAPI/RecipeClient';\n\nfunction createIngredient(ingredient) {\n  var name = ingredient.name,\n      unit = ingredient.unit,\n      quantity = ingredient.quantity;\n  var hasUnit = unit !== undefined && unit !== null;\n  var unitConvertable = hasUnit && unit.scaler !== undefined && unit.scaler !== null;\n  return {\n    name: name,\n    unit: unit,\n    quantity: quantity,\n    hasUnit: hasUnit,\n    unitConvertable: unitConvertable\n  };\n}\n\nfunction getAvailableUnits() {\n  var availableUnits = MockData.availableUnits;\n  return availableUnits;\n}\n\nfunction formatRecipeData(recipe) {\n  var formattedRecipe = recipe;\n  var ingredients = recipe.ingredients.map(function (ingredient) {\n    return createIngredient(ingredient);\n  });\n  formattedRecipe.ingredients = ingredients;\n  return formattedRecipe;\n} // async function formatRecipeData(recipe) {\n//   const client = new RecipeClient();\n//   const fetchRecipe = client.getRecipe({ recipeId: 1 });\n//   console.log(await fetchRecipe);\n//   const formattedRecipe = recipe;\n//   const ingredients = recipe.ingredients.map(ingredient => createIngredient(ingredient));\n//   formattedRecipe.ingredients = ingredients;\n//   return formattedRecipe;\n// }\n\n\nexport default function useRecipeData() {\n  var recipe = MockData.recipe;\n\n  var _formatRecipeData = formatRecipeData(recipe),\n      id = _formatRecipeData.id,\n      title = _formatRecipeData.title,\n      subTitle = _formatRecipeData.subTitle,\n      instructions = _formatRecipeData.instructions,\n      ingredients = _formatRecipeData.ingredients,\n      ovenHeat = _formatRecipeData.ovenHeat,\n      servings = _formatRecipeData.servings,\n      appliances = _formatRecipeData.appliances,\n      image = _formatRecipeData.image;\n\n  var _React$useState = React.useState(recipe.scaler ? recipe.scaler : 1),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      scaler = _React$useState2[0],\n      setScaler = _React$useState2[1];\n\n  var _React$useState3 = React.useState(recipe.isCelsius),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      isCelsius = _React$useState4[0],\n      setIsCelsius = _React$useState4[1];\n\n  var availableUnits = getAvailableUnits();\n  React.useEffect(function () {\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var client, fetchRecipe;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              client = new RecipeClient();\n              fetchRecipe = client.getRecipe({\n                recipeId: 1\n              });\n              _context.t0 = console;\n              _context.next = 5;\n              return fetchRecipe;\n\n            case 5:\n              _context.t1 = _context.sent;\n\n              _context.t0.log.call(_context.t0, _context.t1);\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }))();\n  }, []);\n  return {\n    scaler: scaler,\n    setScaler: setScaler,\n    isCelsius: isCelsius,\n    setIsCelsius: setIsCelsius,\n    id: id,\n    title: title,\n    subTitle: subTitle,\n    instructions: instructions,\n    availableUnits: availableUnits,\n    ingredients: ingredients,\n    ovenHeat: ovenHeat,\n    servings: servings,\n    appliances: appliances,\n    image: image\n  };\n}","map":{"version":3,"sources":["/Users/wilkin/Projects/Coding_Projects/OurRecipes/src/Hooks/useRecipeData.js"],"names":["React","MockData","RecipeClient","createIngredient","ingredient","name","unit","quantity","hasUnit","undefined","unitConvertable","scaler","getAvailableUnits","availableUnits","formatRecipeData","recipe","formattedRecipe","ingredients","map","useRecipeData","id","title","subTitle","instructions","ovenHeat","servings","appliances","image","useState","setScaler","isCelsius","setIsCelsius","useEffect","client","fetchRecipe","getRecipe","recipeId","console","log"],"mappings":"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","sourcesContent":["import React from 'react';\nimport MockData from '../tests/MockData';\nimport RecipeClient from '../RecipeAPI/RecipeClient';\n\nfunction createIngredient(ingredient) {\n  const { name, unit, quantity } = ingredient;\n  const hasUnit = unit !== undefined && unit !== null;\n  const unitConvertable = hasUnit && unit.scaler !== undefined && unit.scaler !== null;\n  return {\n    name, unit, quantity, hasUnit, unitConvertable,\n  };\n}\n\nfunction getAvailableUnits() {\n  const { availableUnits } = MockData;\n  return availableUnits;\n}\n\nfunction formatRecipeData(recipe) {\n  const formattedRecipe = recipe;\n\n  const ingredients = recipe.ingredients.map(ingredient => createIngredient(ingredient));\n  formattedRecipe.ingredients = ingredients;\n  return formattedRecipe;\n}\n\n// async function formatRecipeData(recipe) {\n//   const client = new RecipeClient();\n//   const fetchRecipe = client.getRecipe({ recipeId: 1 });\n//   console.log(await fetchRecipe);\n//   const formattedRecipe = recipe;\n\n//   const ingredients = recipe.ingredients.map(ingredient => createIngredient(ingredient));\n//   formattedRecipe.ingredients = ingredients;\n//   return formattedRecipe;\n// }\n\n\nexport default function useRecipeData() {\n  const { recipe } = MockData;\n  const {\n    id,\n    title,\n    subTitle,\n    instructions,\n    ingredients,\n    ovenHeat,\n    servings,\n    appliances,\n    image,\n  } = formatRecipeData(recipe);\n  const [scaler, setScaler] = React.useState(recipe.scaler ? recipe.scaler : 1);\n  const [isCelsius, setIsCelsius] = React.useState(recipe.isCelsius);\n  const availableUnits = getAvailableUnits();\n\n  React.useEffect(() => {\n    (async () => {\n      const client = new RecipeClient();\n      const fetchRecipe = client.getRecipe({ recipeId: 1 });\n      console.log(await fetchRecipe);\n    })();\n  }, []);\n\n\n  return {\n    scaler,\n    setScaler,\n    isCelsius,\n    setIsCelsius,\n    id,\n    title,\n    subTitle,\n    instructions,\n    availableUnits,\n    ingredients,\n    ovenHeat,\n    servings,\n    appliances,\n    image,\n  };\n}\n"]},"metadata":{},"sourceType":"module"}