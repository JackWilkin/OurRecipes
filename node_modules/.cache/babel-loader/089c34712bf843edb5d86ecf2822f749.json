{"ast":null,"code":"import _slicedToArray from \"/Users/wilkin/Projects/Coding_Projects/OurRecipes/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"/Users/wilkin/Projects/Coding_Projects/OurRecipes/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/wilkin/Projects/Coding_Projects/OurRecipes/src/Components/Ingredient.jsx\";\n\nfunction _templateObject4() {\n  var data = _taggedTemplateLiteral([\"\\n    \", \";\\n    \", \";\\n    transition: all 0.2s ease-out;\\n\\n    .menu {\\n        max-height: \", \";\\n        transition: max-height 0.2s ease-out;\\n        padding: 0;\\n        \", \";\\n    }\\n\\n    .ui.attached.menu {\\n        min-height: 0;\\n    }\\n    .ui.tab.active, .ui.tab.open {\\n        border-radius: 0;\\n        border-top: none;\\n        border-left: 1px solid \", \";\\n        border-bottom: none;\\n        border-right: 1px solid \", \";\\n        padding: 0.75rem;\\n        font-size: 1rem;\\n        margin: 0;\\n        margin-left: -1px;\\n    }\\n\\n    .ui.menu {\\n      a.active.item {\\n        background-color: \", \";\\n\\n        :hover {\\n          background-color: \", \";\\n        }\\n      }\\n\\n      a.item {\\n        \", \";\\n        border-right: 1px solid \", \";\\n        \\n        :hover {\\n          background-color: \", \";\\n        }\\n      }\\n    }\\n\\n    .ui.attached+.ui.attached.menu:not(.top) {\\n        border-left: 1px solid \", \";\\n        border-bottom: none;\\n        border-right: none;\\n        border-radius: 0;\\n        \", \";\\n    }\\n\\n    .ui.bottom.attached.menu>.item:first-child {\\n      border-radius: 0;\\n  }\\n\"]);\n\n  _templateObject4 = function _templateObject4() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n    flex-grow: 1;\\n    display: flex;\\n    align-items: center;\\n    justify-content: center;\\n    padding: 0.5rem;\\n    font-size: 1rem;\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n    display: flex;\\n    align-items: center;\\n    justify-content: center;\\n    padding: 0.5rem;\\n    font-size: 1rem;\\n    border-right: 1px solid \", \";\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    display: flex;\\n    height: fit-content;\\n    border-top: 1px solid \", \";\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useContext } from 'react';\nimport styled from 'styled-components';\nimport { Tab } from 'semantic-ui-react';\nimport { decimalToFraction, convertUnit } from '../utils';\nimport { mediumBlue, lightBlue } from '../Styles/constants';\nimport RecipeContext from '../Context/RecipeContext';\nvar HOVER_GREY = 'rgba(0, 0, 0, 0.09);';\nvar IngredientTool = styled.div(_templateObject(), mediumBlue);\nvar Quantity = styled.span(_templateObject2(), mediumBlue);\nvar IngredientDisplay = styled.div(_templateObject3());\nvar convertableUnitStyles = \"\\n  cursor: pointer;\\n\\n  .ui.tab.active, .ui.tab.open {\\n    :hover {\\n      background-color: \".concat(HOVER_GREY, \";\\n    }\\n  }\\n\");\nvar Unit = styled(Tab)(_templateObject4(), function (props) {\n  return props.hasUnit ? '' : 'display: none';\n}, function (props) {\n  return props.unitConvertable ? convertableUnitStyles : '';\n}, function (props) {\n  return props.open ? '5rem' : '0';\n}, function (props) {\n  return props.unitConvertable ? '' : 'display: none;';\n}, mediumBlue, mediumBlue, lightBlue, lightBlue, function (props) {\n  return props.open ? 'display: flex' : 'display: none';\n}, mediumBlue, HOVER_GREY, mediumBlue, function (props) {\n  return props.open ? \"border-top: 1px solid \".concat(mediumBlue) : '';\n});\n\nfunction createIngredientDisplay(ingredient) {\n  var unitDisplay;\n  var ingredientDisplay = ingredient.name;\n  var unit = ingredient.unit;\n  var noUnit = unit === null;\n\n  if (noUnit) {\n    unitDisplay = '';\n    ingredientDisplay = ingredient.plural === undefined ? ingredient.name : ingredient.plural;\n  } else if (ingredient.quantity <= 1) {\n    unitDisplay = unit.name;\n  } else {\n    unitDisplay = unit.plural === undefined ? unit.plural : unit.name;\n  }\n\n  return {\n    unitDisplay: unitDisplay,\n    ingredientDisplay: ingredientDisplay\n  };\n}\n\nfunction Ingredient(props) {\n  var ingredient = props.ingredient;\n\n  var _useContext = useContext(RecipeContext),\n      availableUnits = _useContext.availableUnits,\n      scaler = _useContext.scaler;\n\n  var _React$useState = React.useState(ingredient.hasUnit ? ingredient.unit.id : 0),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      selectedUnit = _React$useState2[0],\n      setSelectedUnit = _React$useState2[1];\n\n  var _React$useState3 = React.useState(false),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      openTabs = _React$useState4[0],\n      setOpenTabs = _React$useState4[1];\n\n  var _React$useState5 = React.useState(ingredient.quantity),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      quantity = _React$useState6[0],\n      setQuantity = _React$useState6[1]; // const quantity = convertUnit(ingredient.quantity,\n  // availableUnits[selectedUnit].scaler, ingredient.unit.scaler);\n\n\n  var quantityDisplay = decimalToFraction(quantity * scaler, 1000);\n\n  var _createIngredientDisp = createIngredientDisplay(ingredient),\n      ingredientDisplay = _createIngredientDisp.ingredientDisplay;\n\n  var toggleTab = function toggleTab() {\n    return setOpenTabs(!openTabs);\n  };\n\n  var handleTabChange = function handleTabChange(e, _ref) {\n    var activeIndex = _ref.activeIndex;\n    var newUnit = availableUnits[activeIndex];\n    var origionalUnit = ingredient.unit;\n    setQuantity(convertUnit(ingredient.quantity, newUnit.scaler, origionalUnit.scaler) * scaler);\n    setSelectedUnit(newUnit.id);\n  };\n\n  var panes = availableUnits.map(function (u) {\n    return {\n      menuItem: u.name,\n      render: function render() {\n        return React.createElement(Tab.Pane, {\n          key: u.id,\n          onClick: toggleTab,\n          open: openTabs,\n          attached: \"top\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 148\n          },\n          __self: this\n        }, u.name);\n      }\n    };\n  });\n\n  if (ingredient.hasUnit && !ingredient.unitConvertable) {\n    panes[ingredient.unit.id] = {\n      menuItem: ingredient.unit.name,\n      render: function render() {\n        return React.createElement(Tab.Pane, {\n          key: ingredient.unit.id,\n          onClick: toggleTab,\n          open: openTabs,\n          attached: \"top\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 164\n          },\n          __self: this\n        }, ingredient.unit.name);\n      }\n    };\n  }\n\n  return React.createElement(IngredientTool, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177\n    },\n    __self: this\n  }, React.createElement(Quantity, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178\n    },\n    __self: this\n  }, quantityDisplay), React.createElement(Unit, {\n    defaultActiveIndex: selectedUnit,\n    onTabChange: handleTabChange,\n    hasUnit: ingredient.hasUnit,\n    unitConvertable: ingredient.unitConvertable,\n    menu: {\n      attached: 'bottom'\n    },\n    open: openTabs,\n    panes: panes,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179\n    },\n    __self: this\n  }), React.createElement(IngredientDisplay, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188\n    },\n    __self: this\n  }, ingredientDisplay));\n}\n\nexport default Ingredient;","map":{"version":3,"sources":["/Users/wilkin/Projects/Coding_Projects/OurRecipes/src/Components/Ingredient.jsx"],"names":["React","useContext","styled","Tab","decimalToFraction","convertUnit","mediumBlue","lightBlue","RecipeContext","HOVER_GREY","IngredientTool","div","Quantity","span","IngredientDisplay","convertableUnitStyles","Unit","props","hasUnit","unitConvertable","open","createIngredientDisplay","ingredient","unitDisplay","ingredientDisplay","name","unit","noUnit","plural","undefined","quantity","Ingredient","availableUnits","scaler","useState","id","selectedUnit","setSelectedUnit","openTabs","setOpenTabs","setQuantity","quantityDisplay","toggleTab","handleTabChange","e","activeIndex","newUnit","origionalUnit","panes","map","u","menuItem","render","attached"],"mappings":"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","sourcesContent":["import React, { useContext } from 'react';\nimport styled from 'styled-components';\nimport { Tab } from 'semantic-ui-react';\nimport { decimalToFraction, convertUnit } from '../utils';\nimport { mediumBlue, lightBlue } from '../Styles/constants';\nimport RecipeContext from '../Context/RecipeContext';\n\nconst HOVER_GREY = 'rgba(0, 0, 0, 0.09);';\n\nconst IngredientTool = styled.div`\n    display: flex;\n    height: fit-content;\n    border-top: 1px solid ${mediumBlue};\n`;\n\nconst Quantity = styled.span`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    padding: 0.5rem;\n    font-size: 1rem;\n    border-right: 1px solid ${mediumBlue};\n`;\n\nconst IngredientDisplay = styled.div`\n    flex-grow: 1;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    padding: 0.5rem;\n    font-size: 1rem;\n`;\n\nconst convertableUnitStyles = `\n  cursor: pointer;\n\n  .ui.tab.active, .ui.tab.open {\n    :hover {\n      background-color: ${HOVER_GREY};\n    }\n  }\n`;\n\nconst Unit = styled(Tab)`\n    ${props => (props.hasUnit ? '' : 'display: none')};\n    ${props => (props.unitConvertable ? convertableUnitStyles : '')};\n    transition: all 0.2s ease-out;\n\n    .menu {\n        max-height: ${props => (props.open ? '5rem' : '0')};\n        transition: max-height 0.2s ease-out;\n        padding: 0;\n        ${props => (props.unitConvertable ? '' : 'display: none;')};\n    }\n\n    .ui.attached.menu {\n        min-height: 0;\n    }\n    .ui.tab.active, .ui.tab.open {\n        border-radius: 0;\n        border-top: none;\n        border-left: 1px solid ${mediumBlue};\n        border-bottom: none;\n        border-right: 1px solid ${mediumBlue};\n        padding: 0.75rem;\n        font-size: 1rem;\n        margin: 0;\n        margin-left: -1px;\n    }\n\n    .ui.menu {\n      a.active.item {\n        background-color: ${lightBlue};\n\n        :hover {\n          background-color: ${lightBlue};\n        }\n      }\n\n      a.item {\n        ${props => (props.open ? 'display: flex' : 'display: none')};\n        border-right: 1px solid ${mediumBlue};\n        \n        :hover {\n          background-color: ${HOVER_GREY};\n        }\n      }\n    }\n\n    .ui.attached+.ui.attached.menu:not(.top) {\n        border-left: 1px solid ${mediumBlue};\n        border-bottom: none;\n        border-right: none;\n        border-radius: 0;\n        ${props => (props.open ? `border-top: 1px solid ${mediumBlue}` : '')};\n    }\n\n    .ui.bottom.attached.menu>.item:first-child {\n      border-radius: 0;\n  }\n`;\n\nfunction createIngredientDisplay(ingredient) {\n  let unitDisplay;\n  let ingredientDisplay = ingredient.name;\n  const { unit } = ingredient;\n  const noUnit = unit === null;\n\n  if (noUnit) {\n    unitDisplay = '';\n    ingredientDisplay = ingredient.plural === undefined ? ingredient.name : ingredient.plural;\n  } else if (ingredient.quantity <= 1) {\n    unitDisplay = unit.name;\n  } else {\n    unitDisplay = unit.plural === undefined ? unit.plural : unit.name;\n  }\n\n  return { unitDisplay, ingredientDisplay };\n}\n\nfunction Ingredient(props) {\n  const { ingredient } = props;\n  const { availableUnits, scaler } = useContext(RecipeContext);\n  const [selectedUnit, setSelectedUnit] = React.useState(\n    ingredient.hasUnit ? ingredient.unit.id : 0,\n  );\n  const [openTabs, setOpenTabs] = React.useState(false);\n  const [quantity, setQuantity] = React.useState(ingredient.quantity);\n\n  // const quantity = convertUnit(ingredient.quantity,\n  // availableUnits[selectedUnit].scaler, ingredient.unit.scaler);\n  const quantityDisplay = decimalToFraction(quantity * scaler, 1000);\n  const { ingredientDisplay } = createIngredientDisplay(ingredient);\n\n  const toggleTab = () => setOpenTabs(!openTabs);\n\n  const handleTabChange = (e, { activeIndex }) => {\n    const newUnit = availableUnits[activeIndex];\n    const origionalUnit = ingredient.unit;\n    setQuantity(convertUnit(ingredient.quantity, newUnit.scaler, origionalUnit.scaler) * scaler);\n    setSelectedUnit(newUnit.id);\n  };\n\n  const panes = availableUnits.map(u => (\n    {\n      menuItem: u.name,\n      render: () => (\n        <Tab.Pane\n          key={u.id}\n          onClick={toggleTab}\n          open={openTabs}\n          attached=\"top\"\n        >\n          {u.name}\n        </Tab.Pane>\n      ),\n    }\n  ));\n\n  if (ingredient.hasUnit && !ingredient.unitConvertable) {\n    panes[ingredient.unit.id] = {\n      menuItem: ingredient.unit.name,\n      render: () => (\n        <Tab.Pane\n          key={ingredient.unit.id}\n          onClick={toggleTab}\n          open={openTabs}\n          attached=\"top\"\n        >\n          {ingredient.unit.name}\n        </Tab.Pane>\n      ),\n    };\n  }\n\n  return (\n    <IngredientTool>\n      <Quantity>{quantityDisplay}</Quantity>\n      <Unit\n        defaultActiveIndex={selectedUnit}\n        onTabChange={handleTabChange}\n        hasUnit={ingredient.hasUnit}\n        unitConvertable={ingredient.unitConvertable}\n        menu={{ attached: 'bottom' }}\n        open={openTabs}\n        panes={panes}\n      />\n      <IngredientDisplay>{ingredientDisplay}</IngredientDisplay>\n    </IngredientTool>\n  );\n}\n\nexport default Ingredient;\n"]},"metadata":{},"sourceType":"module"}